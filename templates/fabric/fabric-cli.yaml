version: '3.3'

networks:
  {{NETWORK_NAME}}:
    driver: overlay
    # 可对接网络
    #   允许孤立容器连接
    #   只对 swarm 的 docker 主机可用
    # version3.2 之后，stack 命令可以通过 yaml 配置自动创建
    # version3.2 之前，stack 命令不能创建新的可对接网络，必须通过 docker network create 创建
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: 10.200.1.0/24

services:
  cli:
    deploy:
      replicas: 1
      restart_policy:
        condition: none
        delay: 10s
        max_attempts: 1
        window: 1000s
      placement:
        constraints:
          - node.hostname == {{MACHINE_NAME}}
    image: hyperledger/fabric-tools:${FABRIC_IMAGE_TAG}
    tty: true
    stdin_open: true
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - GOPATH=/opt/gopath
      # for configtx.yaml && crypto-config/ && core.yaml
      - FABRIC_CFG_PATH=/etc/hyperledger/fabric
      # for generate.sh
      - FABRIC_VERSION=${FABRIC_VERSION}
      # for channel.sh
      - CHANNEL_CREATE_TIMEOUT=20
      - CHANNEL_NAME=${CHANNEL_NAME}
      - CHANNEL_JOIN_COUNTER=1
      - CHANNEL_JOIN_MAX_RETRY=5
      # for chaincode.sh
      - CC_TEST=${CC_TEST}
      - CC_LANGUAGE=golang
      - CC_QUERY_TIMEOUT=10
      # for peer
      - CORE_LOGGING_LEVEL=${LOG_LEVEL}
      - CORE_PEER_ID=cli
      - CORE_PEER_TLS_ENABLED=true
    working_dir: /etc/hyperledger/fabric/scripts
    command: '/bin/bash main.sh'
    volumes:
      - /var/run/:/host/var/run/
      - ./chaincode:/opt/gopath/src/github.com/chaincode
      - ./scripts:/etc/hyperledger/fabric/scripts
      - ./configtx.yaml:/etc/hyperledger/fabric/configtx.yaml
      - ./crypto-config.yaml:/etc/hyperledger/fabric/crypto-config.yaml
      - ./crypto-config:/etc/hyperledger/fabric/crypto-config
      - ./channel-artifacts:/etc/hyperledger/fabric/channel-artifacts
      - ./generate.log:/tmp/generate.log
    networks:
      - {{NETWORK_NAME}}